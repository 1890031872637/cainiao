public class MainActivity extends ActionBarActivity {
	
	 myView mv;
	 static int a=0,b=0,c=0;//a,b,c代表了三个小球的行走轨迹方案
	 // WindowManager windowManager=this.getWindowManager();
	//  int width = windowManager.getDefaultDisplay().getWidth();
	 // int height = windowManager.getDefaultDisplay().getHeight();
	 private static int cx1=40,cx2=600,cx3=1000,cy1=50,cy2=200,cy3=400;//三个小球的xy坐标
    @SuppressLint("WrongCall") @Override
    protected void onCreate(Bundle savedInstanceState) {
    	//int a=width;
    	//int b=height;
    	//cx3=a;
    	//cy3=b;
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        mv = new myView(this);
      
           

    }


    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.main, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();
        if (id == R.id.action_settings) {
            return true;
        }
        return super.onOptionsItemSelected(item);
    }

    /**
     * A placeholder fragment containing a simple view.
     */
    public static class PlaceholderFragment extends Fragment {

        public PlaceholderFragment() {
        }

        @Override
        public View onCreateView(LayoutInflater inflater, ViewGroup container,
                Bundle savedInstanceState) {
            View rootView = inflater.inflate(R.layout.fragment_main, container, false);
            return rootView;
        }
    }
    
    
    public class myView extends View {
    	public myView(Context context) {
			super(context);
			 new Thread(){
				 
					
					public void run() {
						// TODO Auto-generated method stub
						
							setContentView(mv);
						while(true){
							
							postInvalidate();
							try
							{
								Thread.sleep(100);
							} catch (InterruptedException e)
							{
								e.printStackTrace();
							}

						}
						
					}
					
				}.start();
	
		}
     @Override
        protected void onDraw(Canvas canvas){
    	  Paint paint;
     		
    	  //----绘制圆形------------
	         paint = new Paint();// 定义画笔
	         paint.setStyle(Paint.Style.FILL);//FILL填充内部；STROKE不填充，硬笔线；FILL_AND_STROKE和FILL没有看出明显不同
	         paint.setColor(Color.RED);//设置画笔颜色
	         paint.setStrokeWidth(100);// 设置paint的外框宽度
	         if(cx1>=1000){
	        	 while(true){
	        		 Random rand=new Random();
		        	 int i=rand.nextInt(4);//随机生成0到3之间的数，代表选择方案的代号
		        	 //如果cx1>=1000的话就有两种方案不能用，即方案01不能用
		        	 if(i!=0&&i!=1){
		        		 a=i;
		        		break; 
		        	 }
		        }
	         }
	        	
	         else if(cx1<=0){
	        	 while(true){
	        		 Random rand=new Random();
		        	 int i=rand.nextInt(4);//随机生成0到3之间的数，代表选择方案的代号
		        	 //如果cx1<=0的话就有两种方案不能用，即方案23不能用
		        	 if(i!=2&&i!=3){
		        		 a=i;
		        		break; 
		        	 }
		        }
	   
	         }
	        	
	         else if(cy1>=400)
	         {
	        	 while(true){
	        		 Random rand=new Random();
		        	 int i=rand.nextInt(4);//随机生成0到3之间的数，代表选择方案的代号
		        	 //如果cy1>=400的话就有两种方案不能用，即方案02不能用
		        	 if(i!=0&&i!=2){
		        		 a=i;
		        		break; 
		        	 }
		        }
	         }
	  
	         else if(cy1<=0){
	        	 while(true){
	        		 Random rand=new Random();
		        	 int i=rand.nextInt(4);//随机生成0到3之间的数，代表选择方案的代号
		        	 //如果cy1<=0的话就有两种方案不能用，即方案13不能用
		        	 if(i!=1&&i!=3){
		        		 a=i;
		        		break; 
		        	 }
		        }
	         }
           
	        
             if(cx2>=1000){
	        	 while(true){
	        		 Random rand=new Random();
		        	 int i=rand.nextInt(4);//随机生成0到3之间的数，代表选择方案的代号
		        	 //如果cx2>=1000的话就有两种方案不能用，即方案01不能用
		        	 if(i!=0&&i!=1){
		        		 b=i;
		        		break; 
		        	 }
		        }
	         }
	        	
	         else if(cx2<=0){
	        	 while(true){
	        		 Random rand=new Random();
		        	 int i=rand.nextInt(4);//随机生成0到3之间的数，代表选择方案的代号
		        	 //如果cx2<=0的话就有两种方案不能用，即方案23不能用
		        	 if(i!=2&&i!=3){
		        		 b=i;
		        		break; 
		        	 }
		        }
	   
	         }
	        	
	         else if(cy2>=400)
	         {
	        	 while(true){
	        		 Random rand=new Random();
		        	 int i=rand.nextInt(4);//随机生成0到3之间的数，代表选择方案的代号
		        	 //如果cy2>=400的话就有两种方案不能用，即方案02不能用
		        	 if(i!=0&&i!=2){
		        		 b=i;
		        		break; 
		        	 }
		        }
	         }
	  
	         else if(cy2<=0){
	        	 while(true){
	        		 Random rand=new Random();
		        	 int i=rand.nextInt(4);//随机生成0到3之间的数，代表选择方案的代号
		        	 //如果cy2<=0的话就有两种方案不能用，即方案13不能用
		        	 if(i!=1&&i!=3){
		        		 b=i;
		        		break; 
		        	 }
		        }
	         }
           
	        
             
             
             if(cx3>=1000){
	        	 while(true){
	        		 Random rand=new Random();
		        	 int i=rand.nextInt(4);//随机生成0到3之间的数，代表选择方案的代号
		        	 //如果cx3>=1000的话就有两种方案不能用，即方案01不能用
		        	 if(i!=0&&i!=1){
		        		 c=i;
		        		break; 
		        	 }
		        }
	         }
	        	
	         else if(cx3<=0){
	        	 while(true){
	        		 Random rand=new Random();
		        	 int i=rand.nextInt(4);//随机生成0到3之间的数，代表选择方案的代号
		        	 //如果cx3<=0的话就有两种方案不能用，即方案23不能用
		        	 if(i!=2&&i!=3){
		        		 c=i;
		        		break; 
		        	 }
		        }
	   
	         }
	        	
	         else if(cy3>=400)
	         {
	        	 while(true){
	        		 Random rand=new Random();
		        	 int i=rand.nextInt(4);//随机生成0到3之间的数，代表选择方案的代号
		        	 //如果cy3>=400的话就有两种方案不能用，即方案02不能用
		        	 if(i!=0&&i!=2){
		        		 c=i;
		        		break; 
		        	 }
		        }
	         }
	  
	         else if(cy3<=0){
	        	 while(true){
	        		 Random rand=new Random();
		        	 int i=rand.nextInt(4);//随机生成0到3之间的数，代表选择方案的代号
		        	 //如果cy3<=0的话就有两种方案不能用，即方案13不能用
		        	 if(i!=1&&i!=3){
		        		 c=i;
		        		break; 
		        	 }
		        }
	         }
            
             
             //球1与球2的碰撞
             if(Math.sqrt(Math.pow(cx1-cx2, 2)+Math.pow(cy1-cy2, 2))<=60){
            	 if(Math.sqrt(Math.pow(cx1+11-cx2, 2)+Math.pow(cy1-cy2, 2))>60){
            		 while(true){
    	        		 Random rand=new Random();
    		        	 int i=rand.nextInt(4);//随机生成0到3之间的数，代表选择方案的代号
    		        	 //方案23不能用
    		        	 if(i!=2&&i!=3){
    		        		 a=i;
    		        		break; 
    		        	 }
    		        }
            	 }
            	 
            	 if(Math.sqrt(Math.pow(cx1-11-cx2, 2)+Math.pow(cy1-cy2, 2))>60){
            		 
        	        	 while(true){
        	        		 Random rand=new Random();
        		        	 int i=rand.nextInt(4);//随机生成0到3之间的数，代表选择方案的代号
        		        	 //方案01不能用
        		        	 if(i!=0&&i!=1){
        		        		 a=i;
        		        		break; 
        		        	 }
        		        }
        	         
            	 }
            	 
            	 if(Math.sqrt(Math.pow(cx1-cx2, 2)+Math.pow(cy1-11-cy2, 2))>60){
            		 while(true){
    	        		 Random rand=new Random();
    		        	 int i=rand.nextInt(4);//随机生成0到3之间的数，代表选择方案的代号
    		        	 //即方案02不能用
    		        	 if(i!=0&&i!=2){
    		        		 a=i;
    		        		break; 
    		        	 }
    		        }
            	 }
            	 
            	if(Math.sqrt(Math.pow(cx1-cx2, 2)+Math.pow(cy1+11-cy2, 2))>60){
            		while(true){
   	        		 Random rand=new Random();
   		        	 int i=rand.nextInt(4);//随机生成0到3之间的数，代表选择方案的代号
   		        	 //即方案13不能用
   		        	 if(i!=1&&i!=3){
   		        		 a=i;
   		        		break; 
   		        	 }
   		        }
            	}
            	
            	   
            	
                      
                      if(Math.sqrt(Math.pow(cx1-(cx2+11), 2)+Math.pow(cy1-cy2, 2))>60){
                 		 while(true){
         	        		 Random rand=new Random();
         		        	 int i=rand.nextInt(4);//随机生成0到3之间的数，代表选择方案的代号
         		        	 //方案23不能用
         		        	 if(i!=2&&i!=3){
         		        		 b=i;
         		        		break; 
         		        	 }
         		        }
                 	 }
                 	 
                 	 if(Math.sqrt(Math.pow(cx1-(cx2-11), 2)+Math.pow(cy1-cy2, 2))>60){
                 	
             	        	 while(true){
             	        		 Random rand=new Random();
             		        	 int i=rand.nextInt(4);//随机生成0到3之间的数，代表选择方案的代号
             		        	 //方案01不能用
             		        	 if(i!=0&&i!=1){
             		        		 b=i;
             		        		break; 
             		        	 }
             		        }
             	         
                 	 }
                 	 
                 	 if(Math.sqrt(Math.pow(cx1-cx2, 2)+Math.pow(cy1-(cy2-11), 2))>60){
                 		 while(true){
         	        		 Random rand=new Random();
         		        	 int i=rand.nextInt(4);//随机生成0到3之间的数，代表选择方案的代号
         		        	 //即方案02不能用
         		        	 if(i!=0&&i!=2){
         		        		 b=i;
         		        		break; 
         		        	 }
         		        }
                 	 }
                 	 
                 	if(Math.sqrt(Math.pow(cx1-cx2, 2)+Math.pow(cy1-(cy2+11), 2))>60){
                 		while(true){
        	        		 Random rand=new Random();
        		        	 int i=rand.nextInt(4);//随机生成0到3之间的数，代表选择方案的代号
        		        	 //即方案13不能用
        		        	 if(i!=1&&i!=3){
        		        		 b=i;
        		        		break; 
        		        	 }
        		        }
                 	}
            	
            	
             }
             
             
           //球2与球3的碰撞
             if(Math.sqrt(Math.pow(cx2-cx3, 2)+Math.pow(cy2-cy3, 2))<=60){
            	 if(Math.sqrt(Math.pow(cx2+11-cx3, 2)+Math.pow(cy2-cy3, 2))>60){
            		 while(true){
    	        		 Random rand=new Random();
    		        	 int i=rand.nextInt(4);//随机生成0到3之间的数，代表选择方案的代号
    		        	 //方案23不能用
    		        	 if(i!=2&&i!=3){
    		        		 b=i;
    		        		break; 
    		        	 }
    		        }
            	 }
            	 
            	 if(Math.sqrt(Math.pow(cx2-11-cx3, 2)+Math.pow(cy2-cy3, 2))>60){
            		 
        	        	 while(true){
        	        		 Random rand=new Random();
        		        	 int i=rand.nextInt(4);//随机生成0到3之间的数，代表选择方案的代号
        		        	 //方案01不能用
        		        	 if(i!=0&&i!=1){
        		        		 b=i;
        		        		break; 
        		        	 }
        		        }
        	         
            	 }
            	 
            	 if(Math.sqrt(Math.pow(cx2-cx3, 2)+Math.pow(cy2-11-cy3, 2))>60){
            		 while(true){
    	        		 Random rand=new Random();
    		        	 int i=rand.nextInt(4);//随机生成0到3之间的数，代表选择方案的代号
    		        	 //即方案02不能用
    		        	 if(i!=0&&i!=2){
    		        		 b=i;
    		        		break; 
    		        	 }
    		        }
            	 }
            	 
            	if(Math.sqrt(Math.pow(cx2-cx3, 2)+Math.pow(cy2+11-cy3, 2))>60){
            		while(true){
   	        		 Random rand=new Random();
   		        	 int i=rand.nextInt(4);//随机生成0到3之间的数，代表选择方案的代号
   		        	 //即方案13不能用
   		        	 if(i!=1&&i!=3){
   		        		 b=i;
   		        		break; 
   		        	 }
   		        }
            	}
            	
            	    
                      
                      if(Math.sqrt(Math.pow(cx2-(cx3+11), 2)+Math.pow(cy2-cy3, 2))>60){
                 		 while(true){
         	        		 Random rand=new Random();
         		        	 int i=rand.nextInt(4);//随机生成0到3之间的数，代表选择方案的代号
         		        	 //方案23不能用
         		        	 if(i!=2&&i!=3){
         		        		 c=i;
         		        		break; 
         		        	 }
         		        }
                 	 }
                 	 
                 	 if(Math.sqrt(Math.pow(cx2-(cx3-11), 2)+Math.pow(cy2-cy3, 2))>60){
                 	
             	        	 while(true){
             	        		 Random rand=new Random();
             		        	 int i=rand.nextInt(4);//随机生成0到3之间的数，代表选择方案的代号
             		        	 //方案01不能用
             		        	 if(i!=0&&i!=1){
             		        		 c=i;
             		        		break; 
             		        	 }
             		        }
             	         
                 	 }
                 	 
                 	 if(Math.sqrt(Math.pow(cx2-cx3, 2)+Math.pow(cy2-(cy3-11), 2))>60){
                 		 while(true){
         	        		 Random rand=new Random();
         		        	 int i=rand.nextInt(4);//随机生成0到3之间的数，代表选择方案的代号
         		        	 //即方案02不能用
         		        	 if(i!=0&&i!=2){
         		        		 c=i;
         		        		break; 
         		        	 }
         		        }
                 	 }
                 	 
                 	if(Math.sqrt(Math.pow(cx2-cx3, 2)+Math.pow(cy2-(cy3+11), 2))>60){
                 		while(true){
        	        		 Random rand=new Random();
        		        	 int i=rand.nextInt(4);//随机生成0到3之间的数，代表选择方案的代号
        		        	 //即方案13不能用
        		        	 if(i!=1&&i!=3){
        		        		 c=i;
        		        		break; 
        		        	 }
        		        }
                 	}
            	
            	
             }
             
             
             
             //球1与球3的碰撞
             if(Math.sqrt(Math.pow(cx1-cx3, 2)+Math.pow(cy1-cy3, 2))<=60){
            	 if(Math.sqrt(Math.pow(cx1+11-cx3, 2)+Math.pow(cy1-cy3, 2))>60){
            		 while(true){
    	        		 Random rand=new Random();
    		        	 int i=rand.nextInt(4);//随机生成0到3之间的数，代表选择方案的代号
    		        	 //方案23不能用
    		        	 if(i!=2&&i!=3){
    		        		 a=i;
    		        		break; 
    		        	 }
    		        }
            	 }
            	 
            	 if(Math.sqrt(Math.pow(cx1-11-cx3, 2)+Math.pow(cy1-cy3, 2))>60){
            		 
        	        	 while(true){
        	        		 Random rand=new Random();
        		        	 int i=rand.nextInt(4);//随机生成0到3之间的数，代表选择方案的代号
        		        	 //方案01不能用
        		        	 if(i!=0&&i!=1){
        		        		 a=i;
        		        		break; 
        		        	 }
        		        }
        	         
            	 }
            	 
            	 if(Math.sqrt(Math.pow(cx1-cx3, 2)+Math.pow(cy1-11-cy3, 2))>60){
            		 while(true){
    	        		 Random rand=new Random();
    		        	 int i=rand.nextInt(4);//随机生成0到3之间的数，代表选择方案的代号
    		        	 //即方案02不能用
    		        	 if(i!=0&&i!=2){
    		        		 a=i;
    		        		break; 
    		        	 }
    		        }
            	 }
            	 
            	if(Math.sqrt(Math.pow(cx1-cx3, 2)+Math.pow(cy1+11-cy3, 2))>60){
            		while(true){
   	        		 Random rand=new Random();
   		        	 int i=rand.nextInt(4);//随机生成0到3之间的数，代表选择方案的代号
   		        	 //即方案13不能用
   		        	 if(i!=1&&i!=3){
   		        		 a=i;
   		        		break; 
   		        	 }
   		        }
            	}
            	
            	   
            	
                      
                      if(Math.sqrt(Math.pow(cx1-(cx3+11), 2)+Math.pow(cy1-cy3, 2))>60){
                 		 while(true){
         	        		 Random rand=new Random();
         		        	 int i=rand.nextInt(4);//随机生成0到3之间的数，代表选择方案的代号
         		        	 //方案23不能用
         		        	 if(i!=2&&i!=3){
         		        		 c=i;
         		        		break; 
         		        	 }
         		        }
                 	 }
                 	 
                 	 if(Math.sqrt(Math.pow(cx1-(cx3-11), 2)+Math.pow(cy1-cy3, 2))>60){
                 	
             	        	 while(true){
             	        		 Random rand=new Random();
             		        	 int i=rand.nextInt(4);//随机生成0到3之间的数，代表选择方案的代号
             		        	 //方案01不能用
             		        	 if(i!=0&&i!=1){
             		        		 c=i;
             		        		break; 
             		        	 }
             		        }
             	         
                 	 }
                 	 
                 	 if(Math.sqrt(Math.pow(cx1-cx3, 2)+Math.pow(cy1-(cy3-11), 2))>60){
                 		 while(true){
         	        		 Random rand=new Random();
         		        	 int i=rand.nextInt(4);//随机生成0到3之间的数，代表选择方案的代号
         		        	 //即方案02不能用
         		        	 if(i!=0&&i!=2){
         		        		 c=i;
         		        		break; 
         		        	 }
         		        }
                 	 }
                 	 
                 	if(Math.sqrt(Math.pow(cx1-cx3, 2)+Math.pow(cy1-(cy3+11), 2))>60){
                 		while(true){
        	        		 Random rand=new Random();
        		        	 int i=rand.nextInt(4);//随机生成0到3之间的数，代表选择方案的代号
        		        	 //即方案13不能用
        		        	 if(i!=1&&i!=3){
        		        		 c=i;
        		        		break; 
        		        	 }
        		        }
                 	}
            	
            	
             }
              
             
             if(a==0)
     	         canvas.drawCircle(cx1+=5, cy1+=5, 30, paint);//绘制小球1方案0
                  if(a==1)
     	         canvas.drawCircle(cx1+=5, cy1-=5, 30, paint);//绘制小球1方案1
                  if(a==2)
     	         canvas.drawCircle(cx1-=5, cy1+=5, 30, paint);//绘制小球1方案2
                  if(a==3)
     	         canvas.drawCircle(cx1-=5, cy1-=5, 30, paint);//绘制小球1方案3
             
                  Bitmap bitmap = BitmapFactory.decodeResource(getResources(), R.drawable.king1);
                  canvas.drawBitmap(bitmap, 10, 10, paint); 
                  if(b==0)
         	         canvas.drawCircle(cx2+=5, cy2+=5, 30, paint);//绘制小球2方案0
                      if(b==1)
         	         canvas.drawCircle(cx2+=5, cy2-=5, 30, paint);//绘制小球2方案1
                      if(b==2)
         	         canvas.drawCircle(cx2-=5, cy2+=5, 30, paint);//绘制小球2方案2
                      if(b==3)
         	         canvas.drawCircle(cx2-=5, cy2-=5, 30, paint);//绘制小球2方案3
             
                     if(c==0)
             	         canvas.drawCircle(cx3+=5, cy3+=5, 30, paint);//绘制小球3方案0
                          if(c==1)
             	         canvas.drawCircle(cx3+=5, cy3-=5, 30, paint);//绘制小球3方案1
                          if(c==2)
             	         canvas.drawCircle(cx3-=5, cy3+=5, 30, paint);//绘制小球3方案2
                          if(c==3)
             	         canvas.drawCircle(cx3-=5, cy3-=5, 30, paint);//绘制小球3方案3
                          
	   }   
    }
    
    
   
	
	
	
	
	
	

}
